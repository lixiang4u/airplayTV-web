import ts from 'typescript';
import { CTypeEnum } from '../../typedef';
export declare function isCompatibleType(type1: string, type2: string): boolean;
export declare function isTypeEquals(type1: ts.Type, type2: ts.Type): boolean;
export declare function isBuiltinType(type: ts.Type): boolean;
export declare function isPointerBuiltinType(type: ts.Type): boolean;
export declare function isStructType(type: ts.Type, ignoreLevel?: boolean): boolean;
export declare function isAnyPointer(type: ts.Type): boolean;
export declare function isArrayType(type: ts.Type): boolean;
export declare function isNullPointer(type: ts.Type): boolean;
export declare function isMultiPointer(type: ts.Type): boolean;
export declare function isPointerType(type: ts.Type): boolean;
export declare function isPointerStructType(type: ts.Type): boolean;
export declare function getStructByType(type: ts.Type): import("../struct").Struct;
export declare function getPointerStructByType(type: ts.Type): import("../struct").Struct;
export declare function getBuiltinNameByType(type: ts.Type): any;
export declare function getBuiltinByType(type: ts.Type): CTypeEnum;
export declare function getPointerBuiltinByType(type: ts.Type): CTypeEnum;
export declare function getFixTypeByType(type: ts.Type): CTypeEnum | import("../struct").Struct;
export declare function getPointerLevelByType(type: ts.Type): any;
