{"version":3,"file":"src_avformat_formats_ogg_opus_ts-src_avformat_formats_ogg_vorbis_ts-src_common_io_IOReaderSync_ts.avtranscoder.js","mappings":"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","sources":["webpack://AVTranscoder/./src/avformat/formats/ogg/OggPage.ts","webpack://AVTranscoder/./src/avformat/formats/ogg/opus.ts","webpack://AVTranscoder/./src/avformat/formats/ogg/vorbis.ts","webpack://AVTranscoder/./src/common/io/IOReaderSync.ts"],"sourcesContent":["/*\r\n * libmedia oggs page parser\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\nimport IOReader from 'common/io/IOReader'\r\nimport IOWriter from 'common/io/IOWriterSync'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport IOReaderSync from 'common/io/IOReaderSync'\r\nimport { NOPTS_VALUE_BIGINT } from 'avutil/constant'\r\nimport * as text from 'common/util/text'\r\n\r\nexport interface PagePayload {\r\n  signature: string\r\n  read(ioReader: IOReaderSync): void\r\n  write(ioWriter: IOWriter): void\r\n  setCodec(codecpar: AVCodecParameters): void\r\n  streamIndex: number\r\n}\r\n\r\nclass UserComment {\r\n\r\n  public list: string[]\r\n\r\n  constructor() {\r\n    this.list = []\r\n  }\r\n\r\n  public read(ioReader: IOReaderSync, count: number) {\r\n    for (let i = 0; i < count; i++) {\r\n      const length = ioReader.readUint32()\r\n      this.list.push(ioReader.readString(length))\r\n    }\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    for (let i = 0; i < this.list.length; i++) {\r\n      const buffer = text.encode(this.list[i])\r\n      ioWriter.writeUint32(buffer.length)\r\n      ioWriter.writeBuffer(buffer)\r\n    }\r\n  }\r\n\r\n  public addComment(comment: string) {\r\n    this.list.push(comment)\r\n  }\r\n}\r\n\r\nexport class OggPage {\r\n  /**\r\n   * 4 bytes 页标识， OggS ASCII 字符\r\n   */\r\n  public capturePattern: string\r\n\r\n  /**\r\n   * 1 bytes 版本 id, 目前为 0\r\n   */\r\n  public streamStructureVersion: number\r\n\r\n  /**\r\n   * 1 bytes 类型标识， 表示该页为逻辑流的第一页\r\n   * \r\n   * - 0x01：本页媒体编码数据与前一页属于同一个逻辑流的同一个 packet，若此位没有设，表示本页是以一个新的 packet 开始的；\r\n   * - 0x02：表示该页为逻辑流的第一页，bos 标识，如果此位未设置，那表示不是第一页；\r\n   * - 0x04：表示该页为逻辑流的最后一页，eos 标识，如果此位未设置，那表示本页不是最后一页；\r\n   */\r\n  public headerTypeFlag: number\r\n\r\n  /**\r\n   * 8 bytes 媒体编码相关的参数信息\r\n   * \r\n   * 对于音频流来说，它存储着到本页为止逻辑流在 PCM 输出中采样码的数目，可以由它来算得时间戳\r\n   * 对于视频流来说，它存储着到本页为止视频帧编码的数目\r\n   * 若此值为 -1，那表示截止到本页，逻辑流的 packet 未结束\r\n   */\r\n  public granulePosition: bigint\r\n\r\n  /**\r\n   * 4 bytes 当前页中的流的 id，它是区分本页所属逻辑流与其他逻辑流的序号，我们可以通过这个值来划分流\r\n   */\r\n  public serialNumber: number\r\n\r\n  /**\r\n   * 4 bytes 本页在逻辑流的序号\r\n   */\r\n  public pageSequenceNumber: number\r\n\r\n  /**\r\n   * 4 bytes 循环冗余效验码效验， 用来效验每页的有效性\r\n   */\r\n  public crcCheckSum: number\r\n\r\n  /**\r\n   * 1 bytes 给定本页在 segment_table 域中出现的 segment 个数\r\n   */\r\n  public numberPageSegments: number\r\n\r\n  /**\r\n   * segment 长度表\r\n   * \r\n   * 表示着每个 segment 的长度，取值范围是 0~255\r\n   * 由 segment（1 个 segment 就是 1 个字节）可以得到 packet 的值，每个 packet 的大小是以最后一个不等于 255 的 segment 结束的\r\n   */\r\n  public segmentTable: number[]\r\n\r\n  public payload: Uint8Array\r\n\r\n  public pos: int64\r\n\r\n  constructor() {\r\n    this.reset()\r\n  }\r\n\r\n  public reset() {\r\n    this.capturePattern = 'OggS'\r\n    this.streamStructureVersion = 0\r\n    this.headerTypeFlag = 0\r\n    this.granulePosition = NOPTS_VALUE_BIGINT\r\n    this.serialNumber = 0\r\n    this.pageSequenceNumber = 0\r\n    this.crcCheckSum = 0\r\n    this.numberPageSegments = 0\r\n    this.segmentTable = []\r\n    this.pos = 0n\r\n  }\r\n\r\n\r\n  @deasync\r\n  public async read(ioReader: IOReader) {\r\n    this.pos = ioReader.getPos()\r\n    await this.readPageHeader(ioReader)\r\n\r\n    const length = this.segmentTable.reduce((prev, len) => {\r\n      return prev + len\r\n    }, 0)\r\n\r\n    if (length) {\r\n      this.payload = await ioReader.readBuffer(length)\r\n    }\r\n  }\r\n\r\n  @deasync\r\n  public async readPageHeader(ioReader: IOReader) {\r\n    this.capturePattern = await ioReader.readString(4)\r\n    this.streamStructureVersion = await ioReader.readUint8()\r\n    this.headerTypeFlag = await ioReader.readUint8()\r\n    this.granulePosition = await ioReader.readUint64()\r\n    this.serialNumber = await ioReader.readUint32()\r\n    this.pageSequenceNumber = await ioReader.readUint32()\r\n    this.crcCheckSum = await ioReader.readUint32()\r\n    this.numberPageSegments = await ioReader.readUint8()\r\n\r\n    if (this.numberPageSegments) {\r\n      for (let i = 0; i < this.numberPageSegments; i++) {\r\n        const len = await ioReader.readUint8()\r\n        this.segmentTable.push(len)\r\n      }\r\n    }\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    this.pos = ioWriter.getPos()\r\n    ioWriter.writeString(this.capturePattern)\r\n    ioWriter.writeUint8(this.streamStructureVersion)\r\n    ioWriter.writeUint8(this.headerTypeFlag)\r\n    ioWriter.writeUint64(this.granulePosition)\r\n    ioWriter.writeUint32(this.serialNumber)\r\n    ioWriter.writeUint32(this.pageSequenceNumber)\r\n    ioWriter.writeUint32(this.crcCheckSum)\r\n\r\n    if (this.payload) {\r\n      this.numberPageSegments = Math.floor(this.payload.length / 255) + 1\r\n      const last = this.payload.length % 255\r\n\r\n      ioWriter.writeUint8(this.numberPageSegments)\r\n\r\n      for (let i = 0; i < this.numberPageSegments - 1; i++) {\r\n        ioWriter.writeUint8(255)\r\n      }\r\n      ioWriter.writeUint8(last)\r\n      ioWriter.writeBuffer(this.payload)\r\n    }\r\n    else {\r\n      ioWriter.writeUint8(0)\r\n    }\r\n  }\r\n}\r\n\r\nexport class OggsCommentPage implements PagePayload {\r\n\r\n  public streamIndex: number\r\n\r\n  /**\r\n   * 8 bytes Magic Signature: OpusTags\r\n   */\r\n  public signature: string\r\n\r\n  /**\r\n   * 4 bytes unsigned\r\n   */\r\n  public vendorStringLength: number\r\n\r\n  /**\r\n   * 长度由 Vendor String Length 指定， utf-8 编码\r\n   */\r\n  public vendorString: string\r\n\r\n  /**\r\n   * 4 bytes unsigned, 该字段指示用户提供的注释数。它可能表示用户提供的评论为零，在这种情况下数据包中没有其他字段。\r\n   * 一定不要表示评论太多，以至于评论字符串长度将需要比其余的可用数据更多的数据数据包\r\n   */\r\n  public userCommentListLength: number\r\n\r\n  public comments: UserComment\r\n\r\n  constructor() {\r\n    this.vendorString = defined(VERSION)\r\n    this.vendorStringLength = this.vendorString.length\r\n    this.userCommentListLength = 0\r\n    this.comments = new UserComment()\r\n  }\r\n\r\n  public read(ioReader: IOReaderSync) {\r\n    this.vendorStringLength = ioReader.readUint32()\r\n    this.vendorString = ioReader.readString(this.vendorStringLength)\r\n    this.userCommentListLength = ioReader.readUint32()\r\n    if (this.userCommentListLength) {\r\n      this.comments.read(ioReader, this.userCommentListLength)\r\n    }\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    const buffer = text.encode(this.vendorString)\r\n    ioWriter.writeUint32(buffer.length)\r\n    ioWriter.writeBuffer(buffer)\r\n\r\n    ioWriter.writeUint32(this.comments.list.length)\r\n    this.comments.write(ioWriter)\r\n  }\r\n\r\n  public addComment(comment: string) {\r\n    this.comments.addComment(comment)\r\n  }\r\n\r\n  public setCodec(codecpar: AVCodecParameters) {\r\n  }\r\n}\r\n","/*\r\n * libmedia oggs opus page parser\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\n/**\r\n * oggs opus IDPage 和 commentPage\r\n * \r\n * https://datatracker.ietf.org/doc/html/rfc7845\r\n */\r\n\r\nimport IOWriter from 'common/io/IOWriterSync'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport { OggsCommentPage, PagePayload } from './OggPage'\r\nimport IOReaderSync from 'common/io/IOReaderSync'\r\nimport * as text from 'common/util/text'\r\n\r\nclass ChannelMapping {\r\n\r\n  /**\r\n   * 1 bytes, unsigned ogg packet 里面编码了多少路 stream\r\n   * \r\n   */\r\n  public streamCount: number\r\n\r\n  /**\r\n   * 1 bytes, unsigned 标识有多少路流是双声声道，必须小于 streamCount\r\n   * opus 要支持超过 2 个声道是使用单声道流和双声道流组合而成\r\n   * 一个 opus 流只能是单声道或双声道\r\n   * \r\n   */\r\n  public coupledStreamCount: number\r\n\r\n  /**\r\n   * C bytes, C 为总输出声道数 coupledStreamCount + streamCount\r\n   */\r\n  public mapping: Uint8Array\r\n\r\n  constructor() {\r\n    this.streamCount = 1\r\n    this.coupledStreamCount = 0\r\n    this.mapping = new Uint8Array(1)\r\n  }\r\n\r\n  public read(ioReader: IOReaderSync) {\r\n    this.streamCount = ioReader.readUint8()\r\n    this.coupledStreamCount = ioReader.readUint8()\r\n    this.mapping = ioReader.readBuffer(this.streamCount + this.coupledStreamCount)\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    ioWriter.writeUint8(this.streamCount)\r\n    ioWriter.writeUint8(this.coupledStreamCount)\r\n    ioWriter.writeBuffer(this.mapping)\r\n  }\r\n\r\n}\r\n\r\nexport class OpusOggsIdPage implements PagePayload {\r\n\r\n  public streamIndex: number\r\n\r\n  /**\r\n   * 8 bytes Magic Signature: OpusHead\r\n   */\r\n  public signature: string\r\n\r\n  /**\r\n   * 1 bytes unsigned, 对应值 0x01\r\n   */\r\n  public version: number\r\n\r\n  /**\r\n   * 1 bytes unsigned, 声道数， 它可能和编码声道数不一致， 它可能被修改成 packet-by-packet, 对应值 0x01\r\n   */\r\n  public channels: number\r\n\r\n  /**\r\n   * 2 bytes unsigned, 这是要从开始播放时的解码器输出， 从页面的颗粒位置减去以计算其 PCM 样本位置。\r\n   */\r\n  public preSkip: number\r\n\r\n  /**\r\n   * 4 bytes unsigned, 原始输入采样率\r\n   */\r\n  public sampleRate: number\r\n\r\n  /**\r\n   * 2 bytes signed, 这是解码时要应用的增益， 20 * log10 缩放解码器输出以实现所需的播放音量\r\n   */\r\n  public outputGain: number\r\n\r\n  /**\r\n   * 1 bytes unsigned, 指示输出渠道的顺序和语音含义。该八位位组的每个当前指定的值表示一个映射系列，它定义了一组允许的通道数，以及每个允许的通道数的通道名称的有序集合\r\n   */\r\n  public channelMappingFamily: number\r\n\r\n  /**\r\n   * 可选， 当 Channel Mapping Family 为 0 时被省略。\r\n   */\r\n  public channelMappingTable: ChannelMapping\r\n\r\n  constructor() {\r\n    this.signature = 'OpusHead'\r\n    this.version = 0x01\r\n    this.channels = 1\r\n    this.preSkip = 0\r\n    this.sampleRate = 48000\r\n    this.outputGain = 0\r\n    this.channelMappingFamily = 0\r\n    this.channelMappingTable = new ChannelMapping()\r\n  }\r\n\r\n  public read(ioReader: IOReaderSync) {\r\n    this.signature = ioReader.readString(8)\r\n    this.version = ioReader.readUint8()\r\n    this.channels = ioReader.readUint8()\r\n    this.preSkip = ioReader.readUint16()\r\n    this.sampleRate = ioReader.readUint32()\r\n    this.outputGain = ioReader.readInt16()\r\n    this.channelMappingFamily = ioReader.readUint8()\r\n\r\n    if (this.channelMappingFamily !== 0) {\r\n      this.channelMappingTable.read(ioReader)\r\n    }\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    ioWriter.writeString(this.signature)\r\n    ioWriter.writeUint8(this.version)\r\n    ioWriter.writeUint8(this.channels)\r\n    ioWriter.writeUint16(this.preSkip)\r\n    ioWriter.writeUint32(this.sampleRate)\r\n    ioWriter.writeInt16(this.outputGain)\r\n    ioWriter.writeUint8(this.channelMappingFamily)\r\n    if (this.channelMappingFamily !== 0) {\r\n      this.channelMappingTable.write(ioWriter)\r\n    }\r\n  }\r\n\r\n  public setCodec(codecpar: AVCodecParameters) {\r\n    this.sampleRate = codecpar.sampleRate\r\n    this.channels = codecpar.chLayout.nbChannels\r\n    this.channelMappingFamily = codecpar.format\r\n  }\r\n\r\n}\r\n\r\nexport class OpusOggsCommentPage extends OggsCommentPage {\r\n\r\n  constructor() {\r\n    super()\r\n    this.signature = 'OpusTags'\r\n  }\r\n\r\n  public read(ioReader: IOReaderSync) {\r\n    this.signature = ioReader.readString(8)\r\n    super.read(ioReader)\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    ioWriter.writeString(this.signature)\r\n    super.write(ioWriter)\r\n  }\r\n\r\n  public addComment(comment: string) {\r\n    this.comments.addComment(comment)\r\n  }\r\n\r\n  public setCodec(codecpar: AVCodecParameters) {\r\n  }\r\n}\r\n","/*\r\n * libmedia oggs vorbis page parser\r\n *\r\n * 版权所有 (C) 2024 赵高兴\r\n * Copyright (C) 2024 Gaoxing Zhao\r\n *\r\n * 此文件是 libmedia 的一部分\r\n * This file is part of libmedia.\r\n * \r\n * libmedia 是自由软件；您可以根据 GNU Lesser General Public License（GNU LGPL）3.1\r\n * 或任何其更新的版本条款重新分发或修改它\r\n * libmedia is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU Lesser General Public\r\n * License as published by the Free Software Foundation; either\r\n * version 3.1 of the License, or (at your option) any later version.\r\n * \r\n * libmedia 希望能够为您提供帮助，但不提供任何明示或暗示的担保，包括但不限于适销性或特定用途的保证\r\n * 您应自行承担使用 libmedia 的风险，并且需要遵守 GNU Lesser General Public License 中的条款和条件。\r\n * libmedia is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n * Lesser General Public License for more details.\r\n *\r\n */\r\n\r\n/**\r\n * oggs vorbis IDPage 和 commentPage\r\n * \r\n * https://datatracker.ietf.org/doc/html/rfc7845\r\n */\r\n\r\nimport IOWriter from 'common/io/IOWriterSync'\r\nimport AVCodecParameters from 'avutil/struct/avcodecparameters'\r\nimport { OggsCommentPage, PagePayload } from './OggPage'\r\nimport IOReaderSync from 'common/io/IOReaderSync'\r\n\r\nexport class VorbisOggsIdPage implements PagePayload {\r\n\r\n  public streamIndex: number\r\n\r\n  /**\r\n   * 8 bits packet_type \r\n   */\r\n  public packetType: number\r\n\r\n  /**\r\n   * 6 bytes Magic Signature: vorbis\r\n   */\r\n  public signature: string\r\n\r\n  /**\r\n   * 4 bytes unsigned, 对应值 0x01\r\n   */\r\n  public version: number\r\n\r\n  /**\r\n   * 1 bytes unsigned, 声道数\r\n   */\r\n  public channels: number\r\n\r\n  /**\r\n   * 4 bytes unsigned, 原始输入采样率\r\n   */\r\n  public sampleRate: number\r\n\r\n  /**\r\n   * 4 bytes \r\n   */\r\n  public bitrateMaximum: number\r\n\r\n  /**\r\n   * 4 bytes \r\n   */\r\n  public bitrateNominal: number\r\n\r\n  /**\r\n   * 4 bytes \r\n   */\r\n  public bitrateMinimum: number\r\n\r\n  /**\r\n   * 4 bits\r\n   */\r\n  public blocksize0: number\r\n\r\n  /**\r\n   * 4 bits\r\n   */\r\n  public blocksize1: number\r\n\r\n  /**\r\n   * 1 bit\r\n   */\r\n  public framingFlag: number\r\n\r\n  constructor(signature: string = 'vorbis') {\r\n    this.signature = signature\r\n    this.version = 0\r\n    this.channels = 1\r\n    this.sampleRate = 48000\r\n    this.bitrateMaximum = 0\r\n    this.bitrateNominal = 0\r\n    this.bitrateMinimum = 0\r\n    this.blocksize0 = 2048\r\n    this.blocksize1 = 256\r\n  }\r\n\r\n  public read(ioReader: IOReaderSync) {\r\n    this.packetType = ioReader.readUint8()\r\n    this.signature = ioReader.readString(6)\r\n    this.version = ioReader.readUint32()\r\n    this.channels = ioReader.readUint8()\r\n    this.sampleRate = ioReader.readInt32()\r\n    this.bitrateMaximum = ioReader.readInt32()\r\n    this.bitrateNominal = ioReader.readInt32()\r\n    this.bitrateMinimum = ioReader.readInt32()\r\n\r\n    const block = ioReader.readUint8() & 0xff\r\n\r\n    this.blocksize0 = Math.pow(2, block >>> 4)\r\n    this.blocksize1 = Math.pow(2, block & 0x0f)\r\n\r\n    this.framingFlag = ioReader.readUint8()\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    ioWriter.writeUint8(0x01)\r\n    ioWriter.writeString(this.signature)\r\n    ioWriter.writeUint32(this.version)\r\n    ioWriter.writeUint8(this.channels)\r\n    ioWriter.writeInt32(this.sampleRate)\r\n    ioWriter.writeInt32(this.bitrateMaximum)\r\n    ioWriter.writeInt32(this.bitrateNominal)\r\n    ioWriter.writeInt32(this.bitrateMinimum)\r\n\r\n    ioWriter.writeUint8((Math.log2(this.blocksize0) << 4) | Math.log2(this.blocksize1))\r\n\r\n    ioWriter.writeUint8(0x01)\r\n  }\r\n\r\n  public setCodec(codecpar: AVCodecParameters) {\r\n    this.sampleRate = codecpar.sampleRate\r\n    this.channels = codecpar.chLayout.nbChannels\r\n  }\r\n}\r\n\r\nexport class VorbisOggsCommentPage extends OggsCommentPage {\r\n  /**\r\n   * 8 bits packet_type \r\n   */\r\n  public packetType: number\r\n\r\n  /**\r\n   * 1 bit\r\n   */\r\n  public framingFlag: number\r\n\r\n  constructor(signature: string = 'vorbis') {\r\n    super()\r\n    this.signature = signature\r\n    this.packetType = 0x01\r\n    this.framingFlag = 0x01\r\n  }\r\n\r\n  public read(ioReader: IOReaderSync) {\r\n    this.packetType = ioReader.readUint8()\r\n    this.signature = ioReader.readString(6)\r\n    super.read(ioReader)\r\n    if (this.signature === 'vorbis') {\r\n      this.framingFlag = ioReader.readUint8()\r\n    }\r\n  }\r\n\r\n  public write(ioWriter: IOWriter) {\r\n    ioWriter.writeUint8(this.packetType)\r\n    ioWriter.writeString(this.signature)\r\n    super.write(ioWriter)\r\n    if (this.signature === 'vorbis') {\r\n      ioWriter.writeUint8(this.framingFlag)\r\n    }\r\n  }\r\n\r\n  public addComment(comment: string) {\r\n    this.comments.addComment(comment)\r\n  }\r\n\r\n  public setCodec(codecpar: AVCodecParameters) {\r\n  }\r\n}\r\n","/**\r\n * 读字节流工具\r\n */\r\n\r\nimport * as logger from '../util/logger'\r\nimport IOWriter from './IOWriterSync'\r\nimport * as text from '../util/text'\r\nimport { Uint8ArrayInterface, BytesReaderSync } from './interface'\r\nimport { IOError } from './error'\r\n\r\nexport default class IOReaderSync implements BytesReaderSync {\r\n\r\n  private data: DataView\r\n\r\n  private buffer: Uint8ArrayInterface\r\n\r\n  private pointer: number\r\n\r\n  private endPointer: number\r\n\r\n  private pos: bigint\r\n\r\n  private size: number\r\n\r\n  private littleEndian: boolean\r\n\r\n  private fileSize_: bigint\r\n\r\n  public error: number\r\n\r\n  public onFlush: (buffer: Uint8Array) => number\r\n\r\n  public onSeek: (seek: bigint) => number\r\n\r\n  public onSize: () => bigint\r\n\r\n  public flags: number\r\n\r\n  /**\r\n   * @param data 待读取的字节\r\n   * @param bigEndian 是否按大端字节序读取，默认大端字节序（网络字节序）\r\n   */\r\n  constructor(size: number = 1 * 1024 * 1024, bigEndian: boolean = true, map?: Uint8ArrayInterface) {\r\n    this.pos = 0n\r\n    this.pointer = 0\r\n    this.error = 0\r\n\r\n    this.endPointer = 0\r\n    this.littleEndian = !bigEndian\r\n    this.flags = 0\r\n\r\n    if (map && map.view) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = map.view\r\n    }\r\n    else if (map && !map.byteOffset) {\r\n      this.size = map.length\r\n      this.buffer = map\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n    else {\r\n\r\n      if (map) {\r\n        throw new Error('not support subarray of ArrayBuffer')\r\n      }\r\n\r\n      this.size = Math.max(size, 100 * 1024)\r\n      this.buffer = new Uint8Array(this.size)\r\n      this.data = new DataView(this.buffer.buffer)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读取 8 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint8() {\r\n    if (this.remainingLength() < 1) {\r\n      this.flush(1)\r\n    }\r\n    const value = this.data.getUint8(this.pointer)\r\n    this.pointer++\r\n    this.pos++\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 8 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekUint8() {\r\n    if (this.remainingLength() < 1) {\r\n      this.flush(1)\r\n    }\r\n    return this.data.getUint8(this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint16() {\r\n    if (this.remainingLength() < 2) {\r\n      this.flush(2)\r\n    }\r\n    const value = this.data.getUint16(this.pointer, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 16 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekUint16() {\r\n    if (this.remainingLength() < 2) {\r\n      this.flush(2)\r\n    }\r\n    return this.data.getUint16(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 24 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint24() {\r\n    if (this.remainingLength() < 3) {\r\n      this.flush(3)\r\n    }\r\n    const high = this.readUint16()\r\n    const low = this.readUint8()\r\n    return this.littleEndian ? (low << 16 | high) : (high << 8 | low)\r\n  }\r\n  /**\r\n   * 读取 24 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekUint24() {\r\n    if (this.remainingLength() < 3) {\r\n      this.flush(3)\r\n    }\r\n    const pointer = this.pointer\r\n    const pos = this.pos\r\n\r\n    const high = this.readUint16()\r\n    const low = this.readUint8()\r\n    const value = this.littleEndian ? (low << 16 | high) : (high << 8 | low)\r\n\r\n    this.pointer = pointer\r\n    this.pos = pos\r\n\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 读取 32 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint32() {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush(4)\r\n    }\r\n    const value = this.data.getUint32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 32 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekUint32() {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush(4)\r\n    }\r\n    return this.data.getUint32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 64 位无符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readUint64() {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush(8)\r\n    }\r\n    const value = this.data.getBigUint64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 64 位无符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekUint64() {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush(8)\r\n    }\r\n    return this.data.getBigUint64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 8 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt8() {\r\n    if (this.remainingLength() < 1) {\r\n      this.flush(1)\r\n    }\r\n    const value = this.data.getInt8(this.pointer)\r\n    this.pointer++\r\n    this.pos++\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 8 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekInt8() {\r\n    if (this.remainingLength() < 1) {\r\n      this.flush(1)\r\n    }\r\n    return this.data.getInt8(this.pointer)\r\n  }\r\n\r\n  /**\r\n   * 读取 16 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt16() {\r\n    if (this.remainingLength() < 2) {\r\n      this.flush(2)\r\n    }\r\n    const value = this.data.getInt16(this.pointer, this.littleEndian)\r\n    this.pointer += 2\r\n    this.pos += 2n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 16 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekInt16() {\r\n    if (this.remainingLength() < 2) {\r\n      this.flush(2)\r\n    }\r\n    return this.data.getInt16(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 24 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt24() {\r\n    const value = this.readUint24()\r\n    return (value & 0x800000) ? (value - 0x1000000) : value\r\n  }\r\n  /**\r\n   * 读取 24 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekInt24() {\r\n    const value = this.peekUint24()\r\n    return (value & 0x800000) ? (value - 0x1000000) : value\r\n  }\r\n\r\n  /**\r\n   * 读取 32 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt32() {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush(4)\r\n    }\r\n    const value = this.data.getInt32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 32 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekInt32() {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush(4)\r\n    }\r\n    return this.data.getInt32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取 64 位有符号整数\r\n   * \r\n   * @returns \r\n   */\r\n  public readInt64() {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush(8)\r\n    }\r\n    const value = this.data.getBigInt64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取 64 位有符号整数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekInt64() {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush(8)\r\n    }\r\n    return this.data.getBigInt64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取单精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public readFloat() {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush(4)\r\n    }\r\n    const value = this.data.getFloat32(this.pointer, this.littleEndian)\r\n    this.pointer += 4\r\n    this.pos += 4n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取单精度浮点数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekFloat() {\r\n    if (this.remainingLength() < 4) {\r\n      this.flush(4)\r\n    }\r\n    return this.data.getFloat32(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取双精度浮点数\r\n   * \r\n   * @returns \r\n   */\r\n  public readDouble() {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush(8)\r\n    }\r\n    const value = this.data.getFloat64(this.pointer, this.littleEndian)\r\n    this.pointer += 8\r\n    this.pos += 8n\r\n    return value\r\n  }\r\n  /**\r\n   * 读取双精度浮点数（不会移动读取指针位置）\r\n   * \r\n   * @returns \r\n   */\r\n  public peekDouble() {\r\n    if (this.remainingLength() < 8) {\r\n      this.flush(8)\r\n    }\r\n    return this.data.getFloat64(this.pointer, this.littleEndian)\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的字节，并以 16 进制字符串返回\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public readHex(length: number = 1) {\r\n    let hexStr = ''\r\n    for (let i = 0; i < length; i++) {\r\n      const hex = this.readUint8().toString(16)\r\n      hexStr += (hex.length === 1 ? '0' + hex : hex)\r\n    }\r\n    return hexStr\r\n  }\r\n  /**\r\n   * 读取指定长度的字节，并以 16 进制字符串返回（不会移动读取指针位置）\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public peekHex(length: number = 1) {\r\n\r\n    if (length > this.size) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekHex, length too large')\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      this.flush(length)\r\n    }\r\n\r\n    const pointer = this.pointer\r\n    const pos = this.pos\r\n\r\n    let hexStr = ''\r\n    for (let i = 0; i < length; i++) {\r\n      const hex = this.readUint8().toString(16)\r\n      hexStr += (hex.length === 1 ? '0' + hex : hex)\r\n    }\r\n\r\n    this.pointer = pointer\r\n    this.pos = pos\r\n\r\n    return hexStr\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的二进制数据，不够抛错\r\n   * \r\n   * 第二个参数可传入预先分配的 buffer\r\n   * \r\n   * 返回读取的 Uint8Array\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public readBuffer(length: number): Uint8Array\r\n  public readBuffer<T extends Uint8ArrayInterface>(length: number, buffer: T): T\r\n  public readBuffer(length: number, buffer?: Uint8ArrayInterface): Uint8ArrayInterface {\r\n\r\n    if (!length) {\r\n      return new Uint8Array(0)\r\n    }\r\n\r\n    if (!buffer) {\r\n      buffer = new Uint8Array(length)\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n\r\n      while (length > 0) {\r\n        this.flush()\r\n\r\n        const len = Math.min(this.endPointer - this.pointer, length)\r\n\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n    }\r\n    else {\r\n      buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n    }\r\n\r\n    return buffer\r\n  }\r\n  /**\r\n   * 读取指定长度的二进制 buffer 数据（不会移动读取指针位置）\r\n   * \r\n   * @param length \r\n   * @returns \r\n   */\r\n  public peekBuffer(length: number): Uint8Array\r\n  public peekBuffer<T extends Uint8ArrayInterface>(length: number, buffer: T): T\r\n  public peekBuffer(length: number, buffer?: Uint8ArrayInterface): Uint8ArrayInterface {\r\n\r\n    if (!length) {\r\n      return new Uint8Array(0)\r\n    }\r\n\r\n    if (length > this.size) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekBuffer, length too large')\r\n    }\r\n\r\n    if (this.remainingLength() < length) {\r\n      this.flush(length)\r\n    }\r\n\r\n    if (!buffer) {\r\n      buffer = new Uint8Array(length)\r\n    }\r\n\r\n    buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n\r\n    return buffer\r\n  }\r\n\r\n  /**\r\n   * 读取最多 length 字节的数据到指定 buffer，返回已写入的字节长度\r\n   * \r\n   * @param length \r\n   * @param buffer \r\n   * @returns \r\n   */\r\n  public readToBuffer(length: number, buffer: Uint8ArrayInterface): number {\r\n    if (this.remainingLength() < length) {\r\n      let index = 0\r\n\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n\r\n      while (length > 0) {\r\n        try {\r\n          this.flush()\r\n        }\r\n        catch (error) {\r\n          if (this.error === IOError.END && index) {\r\n            return index\r\n          }\r\n          else {\r\n            throw error\r\n          }\r\n        }\r\n\r\n        const len = Math.min(this.endPointer - this.pointer, length)\r\n\r\n        buffer.set(this.buffer.subarray(this.pointer, this.pointer + len), index)\r\n\r\n        index += len\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n        length -= len\r\n      }\r\n      return index\r\n    }\r\n    else {\r\n      buffer.set(this.buffer.subarray(this.pointer, this.pointer + length), 0)\r\n      this.pointer += length\r\n      this.pos += BigInt(length)\r\n      return length\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 读取指定长度的字符串\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public readString(length: number = 1) {\r\n    const buffer = this.readBuffer(length)\r\n    return text.decode(buffer)\r\n  }\r\n  /**\r\n   * 读取指定长度的字符串\r\n   * \r\n   * @param length 默认 1\r\n   * @returns \r\n   */\r\n  public peekString(length: number = 1) {\r\n    const buffer = this.peekBuffer(length)\r\n    return text.decode(buffer)\r\n  }\r\n\r\n  /**\r\n   * 读取一行字符\r\n   */\r\n  public readLine() {\r\n    let str = ''\r\n\r\n    while (true) {\r\n      let got = false\r\n      for (let i = this.pointer; i < this.endPointer; i++) {\r\n        if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\r\n          if (i !== this.pointer) {\r\n            str += this.readString(i - this.pointer)\r\n          }\r\n          got = true\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!got) {\r\n        str += this.readString(this.remainingLength())\r\n        this.flush()\r\n      }\r\n      else {\r\n        break\r\n      }\r\n    }\r\n\r\n    let next = this.peekUint8()\r\n    if (next === 0x0a || next === 0x0d) {\r\n      this.pointer++\r\n      if (next === 0x0d) {\r\n        next = this.peekUint8()\r\n        // \\r\\n\r\n        if (next === 0x0a) {\r\n          this.pointer++\r\n        }\r\n      }\r\n    }\r\n\r\n    return str\r\n  }\r\n  /**\r\n   * 读取一行字符\r\n   */\r\n  public peekLine() {\r\n    if (this.remainingLength() < this.size) {\r\n      this.flush()\r\n    }\r\n\r\n    let str = ''\r\n\r\n    let got = false\r\n    for (let i = this.pointer; i < this.endPointer; i++) {\r\n      if (this.buffer[i] === 0x0a || this.buffer[i] === 0x0d) {\r\n        str += this.peekString(i - this.pointer)\r\n        got = true\r\n        break\r\n      }\r\n    }\r\n\r\n    if (!got) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('peekLine, out of buffer')\r\n    }\r\n    return str\r\n  }\r\n\r\n  /**\r\n   * 获取当前读取指针\r\n   * \r\n   * @returns \r\n   */\r\n  public getPointer() {\r\n    return this.pointer\r\n  }\r\n\r\n  /**\r\n   * 获取已读字节偏移\r\n   * \r\n   * @returns \r\n   */\r\n  public getPos() {\r\n    return this.pos\r\n  }\r\n\r\n  /**\r\n   * 跳过指定字节长度\r\n   * \r\n   * @param length \r\n   */\r\n  public skip(length: number) {\r\n\r\n    const backup = length\r\n\r\n    while (this.remainingLength() < length) {\r\n      length -= this.remainingLength()\r\n      this.pointer = this.endPointer\r\n      this.flush()\r\n    }\r\n\r\n    if (this.remainingLength() >= length) {\r\n      this.pointer += length\r\n    }\r\n\r\n    this.pos += BigInt(backup)\r\n  }\r\n\r\n  /**\r\n   * 获取剩余可读字节数\r\n   * \r\n   * @returns \r\n   */\r\n  public remainingLength() {\r\n    return this.endPointer - this.pointer\r\n  }\r\n\r\n  /**\r\n   * 重新填充剩余缓冲区\r\n   * \r\n   * @param need \r\n   * @returns \r\n   */\r\n  public flush(need: number = 0) {\r\n\r\n    if (!this.onFlush) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('IOReader error, flush failed because of no flush callback')\r\n    }\r\n\r\n    if (this.size - this.remainingLength() <= 0) {\r\n      return\r\n    }\r\n\r\n    need = Math.min(need, this.size)\r\n\r\n    if (this.pointer < this.endPointer) {\r\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n      this.endPointer = this.endPointer - this.pointer\r\n    }\r\n    else {\r\n      this.endPointer = 0\r\n    }\r\n    this.pointer = 0\r\n\r\n    if (need) {\r\n      while (this.remainingLength() < need) {\r\n        const len = this.onFlush(this.buffer.subarray(this.endPointer))\r\n        if (len < 0) {\r\n          this.error = len\r\n          throw new Error(`IOReader error, flush ${len === IOError.END ? 'ended' : 'failed'}, ret: ${len}`)\r\n        }\r\n        this.endPointer += len\r\n      }\r\n    }\r\n    else {\r\n      const len = this.onFlush(this.buffer.subarray(this.endPointer))\r\n      if (len < 0) {\r\n        this.error = len\r\n        throw new Error(`IOReader error, flush ${len === IOError.END ? 'ended' : 'failed'}, ret: ${len}`)\r\n      }\r\n      this.endPointer += len\r\n    }\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * \r\n   * seek 到指定位置\r\n   * \r\n   * @param pos \r\n   * @param force false 时可以在目前的缓冲区内 seek，否则丢弃缓冲区内容重新填充指定位置的数据，默认 false\r\n   * @param flush 指定 seek 之后是否马上填充数据，否则只 seek 到目标位置，默认 true\r\n   * @returns \r\n   */\r\n  public seek(pos: bigint, force: boolean = false, flush: boolean = true) {\r\n    if (!force) {\r\n      const len = Number(pos - this.pos)\r\n      // 可以往回 seek\r\n      if (len < 0 && Math.abs(len) < this.pointer) {\r\n        this.pointer += len\r\n        this.pos = pos\r\n        return\r\n      }\r\n      // 可以直接往后 seek\r\n      else if (len > 0 && this.pointer + len < this.endPointer) {\r\n        this.pointer += len\r\n        this.pos = pos\r\n        return\r\n      }\r\n      else if (len === 0) {\r\n        return\r\n      }\r\n    }\r\n\r\n    if (!this.onSeek) {\r\n      this.error = IOError.INVALID_OPERATION\r\n      logger.fatal('IOReader error, seek failed because of no seek callback')\r\n    }\r\n\r\n    this.pointer = this.endPointer = 0\r\n    this.pos = pos\r\n    const ret = this.onSeek(pos)\r\n\r\n    if (ret !== 0) {\r\n      this.error = ret\r\n      logger.fatal('IOReader error, seek failed')\r\n    }\r\n\r\n    if (flush) {\r\n      this.flush()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区\r\n   */\r\n  public getBuffer() {\r\n    return this.buffer\r\n  }\r\n\r\n  /**\r\n   * 写入数据到缓冲区\r\n   * \r\n   * @param buffer \r\n   */\r\n  public appendBuffer(buffer: Uint8ArrayInterface) {\r\n    if (this.size - this.endPointer >= buffer.length) {\r\n      this.buffer.set(buffer, this.endPointer)\r\n      this.endPointer += buffer.length\r\n    }\r\n    else {\r\n      this.buffer.set(this.buffer.subarray(this.pointer, this.endPointer), 0)\r\n      this.endPointer = this.endPointer - this.pointer\r\n      this.pointer = 0\r\n\r\n      if (this.size - this.endPointer >= buffer.length) {\r\n        this.buffer.set(buffer, this.endPointer)\r\n        this.endPointer += buffer.length\r\n      }\r\n      else {\r\n        const len = Math.min(this.size - this.endPointer, buffer.length)\r\n        this.buffer.set(buffer.subarray(0, len), this.endPointer)\r\n        this.endPointer += len\r\n\r\n        logger.warn('IOReader, call appendBuffer but the buffer\\'s size is lagger then the remaining size')\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重置 reader\r\n   */\r\n  public reset() {\r\n    this.pointer = this.endPointer = 0\r\n    this.pos = 0n\r\n    this.error = 0\r\n  }\r\n\r\n  /**\r\n   * 设置读取是小端还是大端\r\n   * \r\n   * @param bigEndian \r\n   */\r\n  public setEndian(bigEndian: boolean) {\r\n    this.littleEndian = !bigEndian\r\n  }\r\n\r\n  /**\r\n   * 获取源总字节长度\r\n   * \r\n   * @returns \r\n   */\r\n  public fileSize() {\r\n    if (this.fileSize_) {\r\n      return this.fileSize_\r\n    }\r\n    if (!this.onSize) {\r\n      logger.warn('IOReader error, fileSize failed because of no onSize callback')\r\n      return 0n\r\n    }\r\n    try {\r\n      this.fileSize_ = this.onSize()\r\n    }\r\n    catch (error) {\r\n      logger.warn(`IOReader error, call fileSize failed: ${error}`)\r\n      this.fileSize_ = 0n\r\n    }\r\n    return this.fileSize_\r\n  }\r\n\r\n  /**\r\n   * 获取缓冲区长度\r\n   * \r\n   * @returns \r\n   */\r\n  public getBufferSize() {\r\n    return this.size\r\n  }\r\n\r\n  /**\r\n   * 连接到 ioWriter\r\n   * \r\n   * @param ioWriter \r\n   * @param length \r\n   */\r\n  public pipe(ioWriter: IOWriter, length?: number) {\r\n    if (length) {\r\n      if (this.remainingLength() < length) {\r\n        if (this.remainingLength() > 0) {\r\n          const len = this.remainingLength()\r\n          ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n          this.pointer += len\r\n          this.pos += BigInt(len)\r\n          length -= len\r\n        }\r\n\r\n        while (length > 0) {\r\n          this.flush()\r\n          const len = Math.min(this.endPointer - this.pointer, length)\r\n          ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n          this.pointer += len\r\n          this.pos += BigInt(len)\r\n          length -= len\r\n        }\r\n      }\r\n      else {\r\n        ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + length))\r\n        this.pointer += length\r\n        this.pos += BigInt(length)\r\n      }\r\n    }\r\n    else {\r\n      if (this.remainingLength() > 0) {\r\n        const len = this.remainingLength()\r\n        ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n      }\r\n\r\n      while (this.onFlush(this.buffer.subarray(0)) > 0) {\r\n        const len = this.remainingLength()\r\n        ioWriter.writeBuffer(this.buffer.subarray(this.pointer, this.pointer + len))\r\n        this.pointer += len\r\n        this.pos += BigInt(len)\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}